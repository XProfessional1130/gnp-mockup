{
	"info": {
		"_postman_id": "df3c3cf4-4ee9-43b8-a00a-4be3d59860ea",
		"name": "Ericsson End-Customer API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "45212651"
	},
	"item": [
		{
			"name": "Utilites",
			"item": [
				{
					"name": "Auth Bearer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Presence of required fields in the response schema\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.access_token).to.exist;\r",
									"\r",
									"    pm.environment.set(\"bearerToken\", responseData.access_token); // Store the access token in the environment variable\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "client-1",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "encrypt",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "random",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/realms/api-consumer/protocol/openid-connect/token"
					},
					"response": []
				}
			]
		},
		{
			"name": "ApplicationOwner",
			"item": [
				{
					"name": "Create ApplicationOwner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"approvalStatus is pendingApproval\", function () {\r",
									"    pm.expect(json.approvalStatus).to.eql(\"approve\");\r",
									"});\r",
									"\r",
									"pm.test(\"id is returned\", function () {\r",
									"    pm.expect(json.id).to.exist;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}}, mcc={{mcc}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@baseType\": \"PartyRole\",\r\n    \"@type\": \"ApplicationOwner\",\r\n    \"gnpMetaData\": {\r\n        \"cspId\": \"{{cspId}}\",\r\n        \"aspId\": \"{{appId}}\"\r\n    },\r\n    \"description\": \"Testing business profile\",\r\n    \"engagedParty\": {\r\n        \"@baseType\": \"Organization\",\r\n        \"@type\": \"ApplicationOwnerOrganization\",\r\n        \"contactMedium\": [\r\n            {\r\n                \"@type\": \"EmailContactMedium\",\r\n                \"contactType\": \"email\",\r\n                \"emailAddress\": \"private_data_not_informed@consumer.com\",\r\n                \"id\": \"contact_medium\",\r\n                \"preferred\": true\r\n            }\r\n        ],\r\n        \"dataProtectionOfficer\": {\r\n            \"@type\": \"ApplicationOwnerRelatedOrganization\",\r\n            \"contactMedium\": [\r\n                {\r\n                    \"@type\": \"EmailContactMedium\",\r\n                    \"contactType\": \"email\",\r\n                    \"emailAddress\": \"dpo@test.com\",\r\n                    \"id\": \"dpo\",\r\n                    \"preferred\": true\r\n                }\r\n            ],\r\n            \"name\": \"DPO Office\",\r\n            \"organizationType\": \"department\"\r\n        },\r\n        \"name\": \"Testing business profile\",\r\n        \"organizationIdentification\": [\r\n            {\r\n                \"@type\": \"OrganizationIdentification\",\r\n                \"identificationId\": \"not-provided\"\r\n            }\r\n        ],\r\n        \"organizationType\": \"dpv:ForProfitOrganisation \",\r\n        \"privacyManager\": {\r\n            \"@type\": \"ApplicationOwnerRelatedOrganization\",\r\n            \"contactMedium\": [\r\n                {\r\n                    \"@type\": \"EmailContactMedium\",\r\n                    \"contactType\": \"email\",\r\n                    \"emailAddress\": \"manager@test.com\",\r\n                    \"id\": \"privacy_manager\",\r\n                    \"preferred\": true\r\n                }\r\n            ],\r\n            \"name\": \"Privacy Office\",\r\n            \"organizationType\": \"department\"\r\n        },\r\n        \"privacyPolicyURL\": \"https://1LThiQzd.com\",\r\n        \"registeredGeographicAddress\": {\r\n            \"@baseType\": \"GeographicAddress\",\r\n            \"@type\": \"LightGeographicAddress\",\r\n            \"city\": \"Madrid\",\r\n            \"countryCode\": {\r\n                \"@baseType\": \"StandardIdentifier\",\r\n                \"@type\": \"ISO31661Alpha2StandardIdentifier\",\r\n                \"value\": \"ES\"\r\n            },\r\n            \"locality\": \"Madrid\",\r\n            \"postcode\": \"28020\",\r\n            \"stateOrProvince\": \"Madrid\",\r\n            \"streetName\": \"address 1 address 2\",\r\n            \"streetNr\": \"not informed\"\r\n        },\r\n        \"taxNumber\": \"1234567890-2\",\r\n        \"tradingName\": \"Testing business profile\"\r\n    },\r\n    \"name\": \"Testing business profile\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/v2/operate/applicationOwner"
					},
					"response": []
				},
				{
					"name": "Update ApplicationOwner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@type\": \"ApplicationOwner\",\r\n    \"gnpMetaData\": {\r\n        \"cspId\": \"{{cspId}}\",\r\n        \"aspId\": \"{{aspId}}\"\r\n    },\r\n    \"engagedParty\": {\r\n        \"@baseType\": \"Organization\",\r\n        \"@type\": \"ApplicationOwnerOrganization\",\r\n        \"taxNumber\": \"1234567899\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/v2/operate/applicationOwner/{{id}}"
					},
					"response": []
				},
				{
					"name": "Get ApplicationOwner by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/v2/operate/applicationOwner/{{id}}"
					},
					"response": []
				},
				{
					"name": "List all ApplicationOwners",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/v2/operate/applicationOwner"
					},
					"response": []
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "Create Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"approvalStatus is pendingApproval\", function () {\r",
									"    pm.expect(json.approvalStatus).to.eql(\"approve\");\r",
									"});\r",
									"\r",
									"pm.test(\"gnpMetaData.appId is echoed back\", function () {\r",
									"    pm.expect(json.gnpMetaData.appId).to.exist;\r",
									"    pm.environment.set(\"appId\", json.gnpMetaData.appId);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@baseType\": \"LogicalResource\",\r\n    \"@type\": \"Application\",\r\n    \"gnpMetaData\": {\r\n        \"cspId\": \"{{cspId}}\",\r\n        \"aspId\": \"{{aspId}}\",\r\n        \"appId\": \"{{appId}}\"\r\n    },\r\n    \"name\": \"Test Application Profile 2\",\r\n    \"applicationOwner\": {\r\n        \"@type\": \"PartyRoleRef\",\r\n        \"id\": \"{{id}}\"\r\n    },\r\n    \"category\": \"eventsAndEntertainment\",\r\n    \"commercialName\": \"Test Application Profile 2\",\r\n    \"description\": \"Test Application Profile 2 application\",\r\n    \"privacyPolicyURL\": \"https://1LThiQzd2.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/v2/operate/application"
					},
					"response": []
				},
				{
					"name": "Update Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/merge-patch+json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@type\": \"Application\",\r\n    \"gnpMetaData\": {\r\n        \"cspId\": \"{{cspId}}\",\r\n        \"aspId\": \"{{aspId}}\",\r\n        \"appId\": \"{{appId}}\"\r\n    },\r\n    \"name\": \"Test Number\",\r\n    \"commercialName\": \"Test Application Profile New\",\r\n    \"description\": \"Test Application Profile New application\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/v2/operate/application/{{id}}"
					},
					"response": []
				},
				{
					"name": "Get Application by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/v2/operate/application/{{id}}"
					},
					"response": []
				},
				{
					"name": "List all Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							},
							{
								"key": "X-PLMN",
								"value": "mnc={{mnc}},mcc={{mcc}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/v2/operate/application"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "2",
			"type": "default"
		}
	]
}